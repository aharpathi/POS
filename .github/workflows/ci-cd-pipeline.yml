name: CI/CD Pipeline

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main

env:
  IMAGE_NAME: myapp
  REGISTRY: docker.io
  DOCKER_USER: ${{ secrets.DOCKER_USER }}
  DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

jobs:
  build-test:
    name: Build & Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Source
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Install Dependencies
        run: npm ci

      - name: Run Unit Tests
        run: npm test

      - name: Code Quality Check
        uses: SonarSource/sonarcloud-github-action@master
        with:
          args: >
            -Dsonar.projectKey=myapp
            -Dsonar.organization=myorg
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      - name: Security Scan
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: .

      - name: Build Docker Image
        run: docker build -t $REGISTRY/$DOCKER_USER/$IMAGE_NAME:${{ github.sha }} .

      - name: Login to Docker Registry
        run: echo $DOCKER_PASSWORD | docker login -u $DOCKER_USER --password-stdin $REGISTRY

      - name: Push Docker Image
        run: docker push $REGISTRY/$DOCKER_USER/$IMAGE_NAME:${{ github.sha }}

  deploy-staging:
    name: Deploy to Staging
    runs-on: ubuntu-latest
    needs: build-test
    steps:
      - name: Deploy using kubectl
        uses: azure/k8s-deploy@v4
        with:
          manifests: |
            k8s/deployment.yaml
            k8s/service.yaml
          images: |
            $REGISTRY/$DOCKER_USER/$IMAGE_NAME:${{ github.sha }}
          namespace: staging
        env:
          KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_STAGING }}

  deploy-production:
    name: Deploy to Production
    runs-on: ubuntu-latest
    needs: deploy-staging
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Deploy using kubectl
        uses: azure/k8s-deploy@v4
        with:
          manifests: |
            k8s/deployment.yaml
            k8s/service.yaml
          images: |
            $REGISTRY/$DOCKER_USER/$IMAGE_NAME:${{ github.sha }}
          namespace: production
        env:
          KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_PROD }}
